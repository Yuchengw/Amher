package com.amher.business.bean;

import java.io.Serializable;
import java.util.Date;
 
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.ser.std.DateSerializer;

/**
 * @author yucheng
 * @version 1
 * */
public class Post {

	// Final static constant for different post types
	final static String REQUEST = "REQUEST";
	final static String PROVIDE = "PROVIDE";

	// private fields
	private String subject;
	private String location;
	//private RecurEventInfo period;
	private int quantity;
	private String commentsOrDescription;
	private double cost;
	private String image;
	private UserObject[] partners;
	private String postCategory;
	private PostStatus status;
	private int numberOfOrders; // TODO: more detail
	private int numberOfLikes;
	private UserObject creator;
	private UserObject lastModifiedBy;
	private String type;
	private DateTime expireDate;

	// DbObject information holder
	DBPostObject dbPost;

	public PostObject(UserObject creator, String subject, String location,
			int quantity) {
		dbPost = new DBPostObject();
		setCreator(creator);
		setSubject(subject);
		setLocation(location);
		setQuantity(quantity);
		setPostCategory("Food");
	}

	public PostObject(DBPostObject db) {
		this.dbPost = db;
		reloadAllFieldInformationFromDbObject();
	}

	public PostObject(String id) {
		dbPost = new DBPostObject(id);
		setId(id);
	}

	/* Getters and Setters */
	public String getSubject() {
		return subject;
	}

	public void setSubject(String subject) {
		this.subject = subject;
		dbPost.setSubject(subject);
	}

	public String getLocation() {
		return location;
	}

	public void setLocation(String location) {
		this.location = location;
		dbPost.setLocation(location);
	}

	public RecurEventInfo getPeriod() {
		return period;
	}

	public void setPeriod(RecurEventInfo period) {
		this.period = period;
		dbPost.setPeriod(period);
	}

	public int getQuantity() {
		return quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
		dbPost.setQuantity(quantity);
	}

	public String getCommentsOrDescription() {
		return commentsOrDescription;
	}

	public void setCommentsOrDescription(String commentsOrDescription) {
		this.commentsOrDescription = commentsOrDescription;
		dbPost.setCommentsOrDescription(commentsOrDescription);
	}

	public double getCost() {
		return cost;
	}

	public void setCost(double cost) {
		this.cost = cost;
		dbPost.setCost(cost);
	}

	public String getImage() {
		return image;
	}

	public void setImage(String image) {
		this.image = image;
		dbPost.setImage(image);
	}

	public UserObject[] getPartners() {
		return partners;
	}

	public void setPartners(UserObject[] partners) {
		this.partners = partners;
		dbPost.setPartners(partners);
	}

	public String getPostCategory() {
		return postCategory;
	}

	public void setPostCategory(String postCategory) {
		this.postCategory = postCategory;
		dbPost.setPostCategory(postCategory);
	}

	public PostStatus getStatus() {
		return this.status;
	}

	public void setStatus(PostStatus status) {
		this.status = status;
		dbPost.setStatus(status.getDbValue());
	}

	public int getNumberOfOrders() {
		return numberOfOrders;
	}

	public void setNumberOfOrders(int numberOfOrders) {
		this.numberOfOrders = numberOfOrders;
		dbPost.setNumberOfOrders(numberOfOrders);
	}

	public int getNumberOfLikes() {
		return numberOfLikes;
	}

	public void setNumberOfLikes(int numberOfLikes) {
		this.numberOfLikes = numberOfLikes;
		dbPost.setNumberOfLikes(numberOfLikes);
	}

	public UserObject getCreator() {
		return creator;
	}

	public void setCreator(UserObject creator) {
		this.creator = creator;
		dbPost.setCreatorWithEntity(creator);
	}

	public String getType() {
		return type;
	}

	public void setType(String type) {
		this.type = type;
		dbPost.setType(type);
	}

	public DateTime getExpireDate() {
		return expireDate;
	}

	public void setExpireDate(DateTime expireDate) {
		this.expireDate = expireDate;
		dbPost.setExpireDate(expireDate.toDate());
	}

	public UserObject getLastModifiedBy() {
		return lastModifiedBy;
	}

	public void setLastModifiedBy(UserObject lastModifiedBy) {
		this.lastModifiedBy = lastModifiedBy;
		dbPost.setLastModifiedByWithEntity(lastModifiedBy);
	}
}
