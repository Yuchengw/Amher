<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.amher</groupId>
	<artifactId>appserver</artifactId>
	<packaging>war</packaging>
	<version>1.0.0</version>
	<name>${artifactId}</name>
	<description>Appserver POM for Amher, Author:Yucheng</description>
	
	<!-- Pom properties -->
	<properties>
    	<jetty.version>9.2.7.v20150116</jetty.version>
    	<junit.version>4.10</junit.version>
    	<org.springframework.version>3.2.13.RELEASE</org.springframework.version>
    	<commons-lang.version>20030203.000129</commons-lang.version>
    	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    	<maven.compiler.plugin.version>3.1</maven.compiler.plugin.version>
    	<maven.war.plugin.version>2.2</maven.war.plugin.version>
 	</properties>
	
	<!--  choose EBR repository since we care about OSGI -->
	<repositories>
		<repository>
   			<id>com.springsource.repository.bundles.release</id>
    		<name>EBR Spring Release Repository</name>
    		<url>http:// repository.springsource.com/maven/bundles/release</url>
		</repository>
		<repository>
    		<id>com.springsource.repository.bundles.external</id>
    		<name>EBR External Release Repository</name>
    		<url>http:// repository.springsource.com/maven/bundles/external</url>
		</repository>
	</repositories>
 
 	<!--  dependencies Start -->
    <dependencies>
      <!--   -->
      <dependency>
          <groupId>commons-lang</groupId>
          <artifactId>commons-lang</artifactId>
          <version>${commons-lang.version}</version>
      </dependency>
      <!--  Unit Test  -->
      <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <version>${junit.version}</version>
          <scope>test</scope>
      </dependency>
      <!-- Jackson convert jpo to json format  -->
      <dependency>
    	<groupId>org.codehaus.jackson</groupId>
    	<artifactId>jackson-mapper-asl</artifactId>
    	<version>1.9.5</version>
	  </dependency>
  	  <!--  Jetty Related Dependencies -->
      <dependency>
      	  <groupId>org.eclipse.jetty</groupId>
      	  <artifactId>jetty-server</artifactId>
      	  <version>${jetty.version}</version>
      </dependency>
       <!--  Spring Related Dependencies -->
      <dependency>
    	  <groupId>org.springframework</groupId>
    	  <artifactId>spring-context</artifactId>
    	  <version>${org.springframework.version}</version>
	  </dependency>
	  <dependency>
    	  <groupId>org.springframework</groupId>
    	  <artifactId>spring-web</artifactId>
    	  <version>${org.springframework.version}</version>
	  </dependency>
	  <dependency>
    	  <groupId>org.springframework</groupId>
    	  <artifactId>spring-webmvc</artifactId>
    	  <version>${org.springframework.version}</version>
	  </dependency>
	  <dependency>
    	  <groupId>org.springframework</groupId>
    	  <artifactId>spring-test</artifactId>
    	  <version>${org.springframework.version}</version>
    	  <scope>test</scope> 
      </dependency>
      <dependency>
  		  <groupId>org.springframework</groupId>
  		  <artifactId>org.springframework.core</artifactId>
  		  <version>${org.springframework.version}</version>
	   </dependency>
	  <!--  add for Ja2x -->
	  <dependency>
        <groupId>org.springframework.ws</groupId>
        <artifactId>spring-ws-core</artifactId>
        <version>2.1.4.RELEASE</version>
    </dependency>
     </dependencies>
 
 	<!--  main build start -->
	 <build>
	   <plugins>
	   	 <!-- in order to configure target JVM -->
	   	 <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>${maven.compiler.plugin.version}</version>
            <configuration>
                <target>1.7</target>
                <source>1.7</source>
            </configuration>
         </plugin>
         <!-- in order to create web application archive, since we deploy appserver in elcipse, do not
              want to lose tomcat either -->
         <plugin>
    		<groupId>org.apache.maven.plugins</groupId>
    		<artifactId>maven-war-plugin</artifactId>
    		<version>2.2</version>
    		<configuration>
        	<archive>
            	<manifest>
                	<addClasspath>true</addClasspath>
                	<classpathPrefix>lib/</classpathPrefix>
            		</manifest>
        		</archive>
    		</configuration>
		 </plugin>
         <!--  in order to let maven use jetty -->
	     <plugin>
	       <groupId>org.mortbay.jetty</groupId>
	       <artifactId>jetty-maven-plugin</artifactId>
	       <version>${jetty.version}</version>
	       <configuration>
           	   <scanIntervalSeconds>10</scanIntervalSeconds>
               <stopKey>stop</stopKey>
               <stopPort>9999</stopPort>
           </configuration>
	     </plugin>
	     <!-- <plugin>
	       <groupId>org.codehaus.mojo</groupId>
	       <artifactId>exec-maven-plugin</artifactId>
	       <version>1.1</version>
	       <executions>
	       <execution><goals><goal>java</goal></goals></execution>
	       </executions>
	       <configuration>
	         <mainClass>com.amher.appserver.core.entry.HelloAmherServlet</mainClass>
	       </configuration>
	     </plugin> -->
	   </plugins>
	 </build>
<!--  end Pom -->
</project>
